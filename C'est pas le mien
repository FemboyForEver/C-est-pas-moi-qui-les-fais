-- Configuration de l'interface du piano
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0.8, 0, 0.19, 0) -- Ajustez la taille comme vous le souhaitez
Frame.Position = UDim2.new(0.1, 0, 0.78, 0) -- Ajustez la position comme vous le souhaitez
Frame.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5) -- Ajustez la couleur comme vous le souhaitez
Frame.Name = "Piano" -- Nom du cadre

-- Variables pour les clés
local KeyCount = 56 -- Nombre de touches sur le piano
local KeyWidth = 21 / 12 / KeyCount -- Largeur de chaque touche relative à la largeur du cadre
local KeyColors = {Color3.new(1, 1, 1), Color3.new(0, 0, 0)} -- Couleurs des touches (blanches et noires)
local KeyPattern = {1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1} -- Motif des touches (blanches et noires)

-- Fonction pour jouer le son
local function PlaySound(input)
    spawn(function()	
        local Key = input.Name -- Nom de la touche
        local Sound = input:FindFirstChild("Sound"):Clone()
        Sound.Parent = input

        if Sound then
            Sound.PlaybackSpeed = 1 -- Vitesse de lecture
            Sound.Pitch = 1 -- Hauteur
            Sound:Play() -- Joue le son
        end
    end)
end

-- Fonction pour créer une touche
local function CreateKey(keyIndex)
    local Key = Instance.new("TextButton")
    Key.Parent = Frame
    Key.Size = UDim2.new(KeyWidth, 0, 1, 0) -- Ajustez la taille comme vous le souhaitez
    Key.Position = UDim2.new((keyIndex - 1) * KeyWidth, 0, 0, 0) -- Positionne à côté de la touche précédente
    Key.BackgroundColor3 = KeyColors[KeyPattern[keyIndex]] -- Définit la couleur selon le motif
    Key.Text = "" -- Pas de texte
    Key.Name = keyIndex -- Nomme la touche

    -- Crée un son
    local Sound = Instance.new("Sound") -- Crée un objet son
    Sound.Name = "Sound"
    Sound.SoundId = "rbxassetid://330882505" -- Utilise l'ID que vous avez fourni
    Sound.Parent = Key

    -- Événements pour les interactions tactiles
    Key.TouchTap:Connect(function()
        PlaySound(Key)
        Key.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5) -- Change la couleur lors de la pression
        wait(0.1)
        Key.BackgroundColor3 = Key.BackgroundColor3:Lerp(KeyColors[KeyPattern[keyIndex]], 0.5) -- Rétablir la couleur
    end)

    return Key
end

-- Création des touches
for i = 1, KeyCount do
    CreateKey(i)
end

-- Définir plusieurs morceaux de musique
local MusicCollection = {}

-- Ajouter la musique "Lilium" avec l'ID de son
MusicCollection[1] = {
    -- Simplification de la mélodie
    -- Mesures de Lilium
    {{40, 1/4}, {42, 1/4}, {44, 1/4}, {42, 1/4}}, -- Mesure 1
    {{40, 1/4}, {42, 1/4}, {44, 1/4}, {42, 1/4}}, -- Mesure 2
    {{40, 1/4}, {39, 1/4}, {40, 1/4}, {39, 1/4}}, -- Mesure 3
    {{40, 1/2}}, -- Mesure 4
    -- Ajoutez d'autres mesures pour compléter le morceau
}

-- Fonction pour jouer un morceau aléatoire
local function PlayRandomMusic()
    local randomIndex = math.random(1, #MusicCollection) -- Choisir un morceau aléatoire
    local sheetMusic = MusicCollection[randomIndex]

    -- Jouer la musique choisie
    for i = 1, #sheetMusic do
        for j = 1, #sheetMusic[i] do
            local Note = sheetMusic[i][j][1]
            local Length = sheetMusic[i][j][2]

            local Key = Frame:FindFirstChild(Note)
            if Key then
                PlaySound(Key)
                wait(Length * 0.5) -- Attendre la durée de la note
            end
        end
    end
end

-- Démarrer la lecture de musique aléatoire
PlayRandomMusic()
